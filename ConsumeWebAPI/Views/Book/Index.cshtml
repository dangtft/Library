@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.AspNetCore.Http
@model IEnumerable<ConsumeWebAPI.Models.BookViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<!-- Form for filtering and pagination -->
<form id="filterForm">
    <label for="filterOn">Filter On:</label>
    <select id="filterOn" name="filterOn">
        <option value="title">Title</option>
        <!-- Add other options as needed -->
    </select>
    <label for="filterQuery">Filter Query:</label>
    <input type="text" id="filterQuery" name="filterQuery">
    <label for="sortBy">Sort By:</label>
    <select id="sortBy" name="sortBy">
        <option value="title">Title</option>
    </select>
    <label for="isAscending">Ascending:</label>
    <input type="checkbox" id="isAscending" name="isAscending">
    <button type="submit" id="applyFiltersBtn">Apply Filters</button>
</form>



<table class="table">
    <!-- Table header -->
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isRead)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateRead)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CoverUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateAdded)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublisherName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AuthorNames)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.isRead)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateRead)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoverUrl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateAdded)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublisherName)
                </td>
                <td>
                    <ul>
                        @foreach (var authorid in item.AuthorNames)
                        {
                            <li>@authorid</li>
                        }
                    </ul>
                </td>
                <td>
                    <a asp-controller="Book" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-controller="Book" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="Book" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    $(document).ready(function () {
        $('#applyFiltersBtn').click(function (e) {
            e.preventDefault();
            var filterOn = $('#filterOn').val();
            var filterQuery = $('#filterQuery').val();
            var sortBy = $('#sortBy').val();
            var isAscending = $('#isAscending').is(':checked');

            // Gửi yêu cầu lọc và sắp xếp dữ liệu
            $.ajax({
                url: '/Book/GetBooks/get-all-book',
                type: 'GET',
                data: {
                    filterOn: filterOn,
                    filterQuery: filterQuery,
                    sortBy: sortBy,
                    isAscending: isAscending
                },
                success: function (data) {
                    // Xóa dữ liệu cũ trong bảng
                    $('#dataTable tbody').empty();

                    // Duyệt qua mỗi phần tử trong dữ liệu mới nhận được và thêm chúng vào bảng
                    data.forEach(function (item) {
                        var row = $('<tr></tr>'); // Tạo một hàng mới

                        // Thêm các cột dữ liệu vào hàng mới
                        row.append($('<td></td>').text(item.Id));
                        row.append($('<td></td>').text(item.Title));
                        row.append($('<td></td>').text(item.Description));
                        row.append($('<td></td>').text(item.isRead));
                        row.append($('<td></td>').text(item.DateRead));
                        row.append($('<td></td>').text(item.Genre));
                        row.append($('<td></td>').text(item.CoverUrl));
                        row.append($('<td></td>').text(item.DateAdded));
                        row.append($('<td></td>').text(item.PublisherName));

                        // Tạo một danh sách để hiển thị tất cả tác giả của cuốn sách
                        var authorsList = $('<ul></ul>');
                        item.AuthorNames.forEach(function (authorName) {
                            authorsList.append($('<li></li>').text(authorName));
                        });
                        var authorsCell = $('<td></td>').append(authorsList);
                        row.append(authorsCell);

                        // Thêm các nút chỉnh sửa và xóa
                        var actionCell = $('<td></td>');
                        var editLink = $('<a></a>').attr('href', '/Book/Edit/' + item.Id).text('Edit');
                        var detailsLink = $('<a></a>').attr('href', '/Book/Details/' + item.Id).text('Details');
                        var deleteLink = $('<a></a>').attr('href', '/Book/Delete/' + item.Id).text('Delete');
                        actionCell.append(editLink).append(' | ').append(detailsLink).append(' | ').append(deleteLink);
                        row.append(actionCell);

                        // Thêm hàng mới vào bảng
                        $('#dataTable tbody').append(row);
                    });
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error:', errorThrown);
                }
            });
        });
    });
</script>





