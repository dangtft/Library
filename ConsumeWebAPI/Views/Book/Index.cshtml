@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.AspNetCore.Http
@model IEnumerable<ConsumeWebAPI.Models.BookViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<!-- Form for filtering and pagination -->
<form asp-controller="Book" asp-action="Index" method="get">
    <label for="filterOn">Filter On:</label>
    <select id="filterOn" name="filterOn">
        <option value="title">Title</option>
       
        
    </select>
    <label for="filterQuery">Filter Query:</label>
    <input type="text" id="filterQuery" name="filterQuery">
    <label for="sortBy">Sort By:</label>
    <select id="sortBy" name="sortBy">
        <option value="title">Title</option>
    </select>
    <label for="isAscending">Tang dan:</label>
    <input type="radio" id="isAscending" name="isAscending" value="True"/>
    <label for="isAscending">Giam dan:</label>
    <input type="radio" id="isAscending" name="isAscending" value="False"/>

    <button type="submit" id="applyFiltersBtn">Apply Filters</button>
</form>



<table class="table">
    <!-- Table header -->
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isRead)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateRead)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CoverUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateAdded)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublisherName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AuthorNames)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.isRead)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateRead)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoverUrl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateAdded)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublisherName)
                </td>
                <td>
                    <ul>
                        @foreach (var authorid in item.AuthorNames)
                        {
                            <li>@authorid</li>
                        }
                    </ul>
                </td>
                <td>
                    <a asp-controller="Book" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-controller="Book" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="Book" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>







